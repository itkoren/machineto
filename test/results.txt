[INITIALIZING]: Got needed initialization data
[INITIALIZING]: currentState = off
[INITIALIZING]: transitionDiagram = {"off":{"turnOn":{"nextState":"on"}},"on":{"turnOff":{"nextState":"off"}}}
[INITIALIZING]: Got needed initialization data
[INITIALIZING]: currentState = state1
[INITIALIZING]: transitionDiagram = {"state1":{"event":{"nextState":"state2"}},"state2":{"event":{}}}

[0m[0m
[0m  machineto Tests[0m
[0m    Test machineto API[0m
[2K[0G    [32m  âœ“[0m[90m should respond to fire method [0m
[2K[0G    [32m  âœ“[0m[90m should respond to getCurrentState method [0m
[0m    Test machineto with requirejs[0m
[2K[0G    [32m  âœ“[0m[90m should respond to getCurrentState method [0m
[0m    Test two states transits[0m
[2K[0G    [32m  âœ“[0m[90m 'off' and 'on' should not have been called [0m
[FIRE {fire}]: eventName = turnOn
[LOOKUP]: currentState = off, eventName = turnOn
[ACTION]: params = undefined
ACTION: SUCCESS
[UPDATE]: nextState = on
[FIRE {fire}]: FIRED
[GET {getCurrentState}]: currentState = on
[2K[0G    [32m  âœ“[0m[90m 'on' should have been called once and current state should be 'on' [0m
[FIRE {fire}]: eventName = turnOff
[LOOKUP]: currentState = on, eventName = turnOff
[ACTION]: params = undefined
ACTION: SUCCESS
[UPDATE]: nextState = off
[FIRE {fire}]: FIRED
[GET {getCurrentState}]: currentState = off
[2K[0G    [32m  âœ“[0m[90m 'off' should have been called once and current state should be 'off' [0m
[0m    Test argument passing to the action[0m
[FIRE {fire}]: eventName = event
[LOOKUP]: currentState = state1, eventName = event
[ACTION]: params = [{"args":1}]
ACTION: SUCCESS
[UPDATE]: nextState = state2
[FIRE {fire}]: FIRED
[2K[0G    [32m  âœ“[0m[90m should call action with 'args1' [0m
[FIRE {fire}]: eventName = event
[LOOKUP]: currentState = state2, eventName = event
[ACTION]: params = [{"args":2}]
ACTION: SUCCESS
[UPDATE]: nextState = undefined
[FIRE {fire}]: FIRED
[2K[0G    [32m  âœ“[0m[90m should call action with 'args2' [0m
[0m    Test the action is triggered in the supplied context[0m
[2K[0G    [32m  âœ“[0m[90m should call action with context [0m
[0m    Test wrong event in state[0m
[2K[0G    [32m  âœ“[0m[90m should not move state with 'wrong' event [0m
[0m    Test exception in event action[0m
[2K[0G    [32m  âœ“[0m[90m should not move state when there was an exception in event action [0m
[0m    Test multiple states transits[0m
[2K[0G    [32m  âœ“[0m[90m 'off', 'on' and 'allow' should not have been called [0m
[2K[0G    [32m  âœ“[0m[90m 'allow' should have been called once with '#1234' and current state should be 'off' [0m
[2K[0G    [32m  âœ“[0m[90m 'on' should have been called once with 'now!' and current state should be 'on' [0m
[2K[0G    [32m  âœ“[0m[90m no action should be called and current state should stay 'on' [0m
[2K[0G    [32m  âœ“[0m[90m 'allow' should have been called twice, last called with '1234#' and current state should be 'on' [0m
[2K[0G    [32m  âœ“[0m[90m 'allow' should have been called three times, last called with '#' and current state should be 'on' [0m
[2K[0G    [32m  âœ“[0m[90m 'off' should have been called once with 'bye!' and current state should be 'off' [0m


[92m [0m[32m 18 passing[0m[90m (32ms)[0m

